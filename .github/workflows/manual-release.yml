name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        type: choice
        description: 'Release type'
        options:
          - patch
          - minor
          - major
        required: true
        default: 'patch'
      dry_run:
        type: boolean
        description: 'Dry run (no actual publishing)'
        required: false
        default: false

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Release Process
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8.10.0
          run_install: false

      # Explicitly set shell environment variable
      - name: Set shell environment
        run: echo "SHELL=/bin/bash" >> $GITHUB_ENV

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup PNPM cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Configure Git user
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Generate Icons
        run: pnpm generate

      - name: Fix component types
        run: pnpm fix-component-types

      - name: Enhance React Native Icons
        run: pnpm enhance-rn

      - name: Clean up generated files
        run: rm -rf packages/*/dist

      - name: Run release script
        id: release
        run: |
          # Determine release type from input
          RELEASE_TYPE="${{ github.event.inputs.version_type }}"
          echo "Release type: $RELEASE_TYPE"
          
          # Determine if this is a dry run
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            echo "Running in DRY RUN mode - no actual publishing will occur"
            pnpm release:dry -- --$RELEASE_TYPE
          else
            echo "Running in PRODUCTION mode - changes will be published"
            pnpm release -- --$RELEASE_TYPE
          fi

      - name: Build packages
        run: pnpm build

      # Use GitHub's built-in token to push changes and tags
      - name: Push tags and changes
        if: ${{ github.event.inputs.dry_run != 'true' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true

      # Add release summary
      - name: Release Summary
        run: |
          echo "### Release Summary âœ…" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            echo "í´¬ **DRY RUN** - No actual publishing occurred" >> $GITHUB_STEP_SUMMARY
          else
            echo "í³¦ Successfully published packages" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "í³… Release Date: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "í´¢ Release Type: ${{ github.event.inputs.version_type }}" >> $GITHUB_STEP_SUMMARY
