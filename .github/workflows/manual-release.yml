name: Manual Release and Publish

on:
  workflow_dispatch:
    inputs:
      version_type:
        type: choice
        description: 'Release type'
        options: [patch, minor, major]
        required: true
        default: patch
      dry_run:
        type: boolean
        description: 'Dry run (no actual publishing)'
        required: false
        default: false

permissions:
  contents: write
  packages: write
  pull-requests: write
  id-token: write

concurrency:
  group: manual-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build & Generate Artifacts
        run: pnpm run release:prepare

      - name: Bump Version
        id: bump
        run: |
          pnpm version ${{ github.event.inputs.version_type }} --workspace --no-git-tag-version
          echo "new_version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: Commit & Tag Release
        if: ${{ !github.event.inputs.dry_run }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@users.noreply.github.com
          git add .
          git commit -m "chore(release): v${{ steps.bump.outputs.new_version }} [skip ci]"
          git tag v${{ steps.bump.outputs.new_version }}
          git push && git push --tags

      - name: Create GitHub Release
        if: ${{ !github.event.inputs.dry_run }}
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.bump.outputs.new_version }}
          release_name: Release v${{ steps.bump.outputs.new_version }}
          draft: false
          prerelease: false
          body: |
            - Version: ${{ steps.bump.outputs.new_version }}
            - Release Type: ${{ github.event.inputs.version_type }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Dry Run Summary
        if: ${{ github.event.inputs.dry_run }}
        run: |
          echo "ðŸš§ Dry run: version would be v${{ steps.bump.outputs.new_version }}"
