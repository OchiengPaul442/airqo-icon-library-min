name: Release

on:
  workflow_dispatch:
    inputs:
      force:
        description: 'Force release'
        required: false
        default: 'false'
  push:
    branches: [main]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8.10.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup PNPM cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build packages
        run: pnpm build

      - name: Get next version
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          FORCE: ${{ github.event.inputs.force }}
        run: |
          if [ "$FORCE" == "true" ]; then
            VERSION=$(npx semantic-release --dry-run --no-ci | grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+')
          else
            VERSION=$(npx semantic-release --dry-run | grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+')
          fi

          if [ -n "$VERSION" ]; then
            echo "NEXT_VERSION=$VERSION" >> $GITHUB_ENV
            echo "next_version=$VERSION" >> $GITHUB_OUTPUT
            echo "Next version will be: $VERSION"
          else
            echo "No new version to release"
            echo "NEXT_VERSION=0.0.0" >> $GITHUB_ENV
            echo "next_version=0.0.0" >> $GITHUB_OUTPUT
          fi

      - name: Update package versions
        if: steps.semantic.outputs.next_version != '0.0.0'
        run: node scripts/update-versions.js ${{ steps.semantic.outputs.next_version }}

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          FORCE: ${{ github.event.inputs.force }}
        run: |
          if [ "$FORCE" == "true" ]; then
            pnpm semantic-release --no-ci
          else
            pnpm semantic-release
          fi

      - name: Publish to NPM
        if: steps.semantic.outputs.next_version != '0.0.0'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: node scripts/publish-packages.js
