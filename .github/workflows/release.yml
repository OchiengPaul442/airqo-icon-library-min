name: CI & Release
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
          scope: '@airqo-icons-min'

      - name: Install dependencies
        run: pnpm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create output directories
        run: |
          mkdir -p packages/react/src/icons
          mkdir -p packages/react-native/src/icons
          mkdir -p packages/flutter/assets
          mkdir -p packages/vue/src/icons
          mkdir -p packages/core/src

      - name: Build packages
        run: |
          pnpm run optimize
          node scripts/generate-icons.js
          pnpm run build

      - name: Save build artifacts
        uses: actions/cache@v3
        with:
          path: |
            packages/*/dist
            packages/*/package.json
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
          scope: '@airqo-icons-min'

      - name: Restore build artifacts
        uses: actions/cache@v3
        with:
          path: |
            packages/*/dist
            packages/*/package.json
          key: ${{ runner.os }}-build-${{ github.sha }}

      - name: Configure Git User
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Configure NPM Authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
          echo "@airqo-icons-min:registry=https://registry.npmjs.org/" >> ~/.npmrc
          echo "access=public" >> ~/.npmrc

      - name: Install dependencies
        run: pnpm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify NPM Authentication
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Running semantic release..."
          npx semantic-release --debug

      - name: Manual Package Publishing
        if: success()
        run: |
          echo "Publishing packages manually..."
          cd packages/core && npm publish --access public || echo "Core package publish failed"
          cd ../react && npm publish --access public || echo "React package publish failed"
          cd ../react-native && npm publish --access public || echo "React Native package publish failed"
          cd ../vue && npm publish --access public || echo "Vue package publish failed"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Debug Publishing (if failure)
        if: failure()
        run: |
          echo "=== Release failed, showing diagnostic information ==="
          echo "NPM Config:"
          npm config list
          echo "=== .npmrc contents:"
          cat ~/.npmrc | sed 's/:.*/: ***/'
          echo "=== NPM whoami:"
          npm whoami || echo "Not logged in to NPM"
          echo "=== Package versions:"
          for pkg in core react react-native vue; do
            echo "Version of @airqo-icons-min/$pkg:"
            cat "packages/$pkg/package.json" | grep version
          done
